# Copyright (C) 2022-2024 Martin Scheiber and Christian Brommer,
# Control of Networked Systems, University of Klagenfurt, Austria.
#
# All rights reserved.
#
# This software is licensed under the terms of the BSD-2-Clause-License with
# no commercial use allowed, the full terms of which are made available
# in the LICENSE file. No license in patents is granted.
#
# You can contact the author at <martin.scheiber@ieee.org> and
# <christian.brommer@ieee.org>.

name: ROS

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main", "development" ]

jobs:
  ros_ci:
    name: Build ROS ${{ matrix.build_type }} (${{ matrix.ROS_DISTRO }})
    runs-on: ubuntu-22.04
    container: ros:${{ matrix.ROS_DISTRO }}-ros-base
    strategy:
      # fail-fast needs to be false to perform all matrix checks, even if one fails
      fail-fast: true
      matrix:
        ROS_DISTRO: [humble, iron]
        build_type: [Debug, Release]
    env:
      BADGE_CREATION: false #${{ github.event_name == 'push' && github.repository_owner == 'aau-cns' }}
    steps:

    - name: Get newest Git version
      run: >
           apt update && apt install --no-install-recommends -y
           software-properties-common
           && add-apt-repository ppa:git-core/ppa

    - name: Install Dependencies
      run: >
           apt update && apt install --no-install-recommends -y
           git
           build-essential
           g++
           clang
           clang-tidy
           cmake
           python3-pip
           libgtest-dev
           doxygen
           graphviz    

    - name: Create Ros2 Workspace
      run: mkdir -p ${{github.workspace}}/ros_ws/src

    - name: Checkout Latest Version
      uses: actions/checkout@v4
      with:
        path: ${{github.workspace}}/ros_ws/src
        submodules: recursive

    - name: Build ${{ matrix.build_type }}
      shell: bash
      working-directory: ${{github.workspace}}/ros_ws
      run: |
          source /opt/ros/${{ matrix.ROS_DISTRO }}/setup.bash
          colcon build \
            --build-base build_${{ matrix.build_type }} \
            --install-base install_${{ matrix.build_type }} \
            --event-handlers console_cohesion+ \
            --cmake-args -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_VERBOSE_MAKEFILE=ON


